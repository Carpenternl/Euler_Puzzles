using System;
using System.Collections.Generic;
using System.Numerics;


namespace Distinct_powers
{
    class Program
    {
        static void Main(string[] args)
        {
            System.Console.WriteLine("Consider all integer combinations of a^b for 2<=a<=5 and 2<a=b<=5");
            for (int alpha = 2; alpha <= 5; alpha++)
            {
                for (int beta = 2; beta <=5; beta++)
                {
                    var lineEnd = beta!=5?", ":null;
                    Console.Write($"{alpha}^{beta} = {Math.Pow(alpha,beta)}{lineEnd}".PadRight(16));
                }
                Console.WriteLine("");
            }
            Console.WriteLine("If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms: ");
            Console.WriteLine("ow many distinct terms are in the sequence generated by a^b for 2<=a<=100 and 2<a=b<=100");
            List<BigInteger> MemList = new List<BigInteger>();

            for (int varA = 2; varA <= 100; varA++)
            {
                for (int varB = 2; varB <= 100; varB++)
                {
                    BigInteger BigA = new BigInteger(varA);
                    BigInteger Result = BigInteger.Pow(BigA, varB);
                    if (!MemList.Contains(Result))
                    {
                        MemList.Add(Result);
                    }
                }
            }
            Console.WriteLine($"answer {MemList.Count}");


        }

    }
}
